openapi: 3.0.3
info:
    title: MesContacts API
    version: 1.0.0
servers:
    - url: http://localhost:5000
paths:
    /:
        get:
            summary: Welcome endpoint
            responses:
                "200":
                    description: Hello World
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Hello World!
    /health:
        get:
            summary: Health check (API + DB)
            responses:
                "200":
                    description: API and DB are healthy
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    api-status:
                                        type: string
                                    db-status:
                                        type: string
                "500":
                    description: Database connection error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status_api:
                                        type: string
                                    status_db:
                                        type: string
                                    error:
                                        type: string
    /auth/register:
        post:
            summary: Register a new user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                                - password
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string
            responses:
                "201":
                    description: User registered
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    insertedId:
                                        type: string
                "400":
                    description: Invalid input or email already used
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                "500":
                    description: Server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
    /auth/login:
        post:
            summary: Login a user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                                - password
                            properties:
                                email:
                                    type: string
                                password:
                                    type: string
            responses:
                "200":
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                    token:
                                        type: string
                "400":
                    description: Invalid credentials
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                "500":
                    description: Server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
    /protected:
        get:
            summary: Example protected route (JWT required)
            security:
                - bearerAuth: []
            responses:
                "200":
                    description: Access granted
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                "401":
                    description: Unauthorized (missing or invalid token)
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
    # 404 fallback is not documented in OpenAPI, but you can mention it in general responses

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
